// Mocks generated by Mockito 5.4.3 from annotations
// in homer/test/features/backup_and_restore/data/repositories/backup_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:homer/features/backup_and_restore/data/datasources/backup_data_source.dart'
    as _i2;
import 'package:homer/features/backup_and_restore/data/models/backup_book_dto.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:multiple_result/multiple_result.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BackupDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupDataSource extends _i1.Mock implements _i2.BackupDataSource {
  MockBackupDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.BackupBookDTO>> loadAll(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAll,
          [path],
        ),
        returnValue:
            _i3.Future<List<_i4.BackupBookDTO>>.value(<_i4.BackupBookDTO>[]),
      ) as _i3.Future<List<_i4.BackupBookDTO>>);

  @override
  _i3.Future<_i5.Unit> saveAll(
    String? path,
    List<_i4.BackupBookDTO>? books,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAll,
          [
            path,
            books,
          ],
        ),
        returnValue: _i3.Future<_i5.Unit>.value(_i6.dummyValue<_i5.Unit>(
          this,
          Invocation.method(
            #saveAll,
            [
              path,
              books,
            ],
          ),
        )),
      ) as _i3.Future<_i5.Unit>);
}
